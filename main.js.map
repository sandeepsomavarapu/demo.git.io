{"version":3,"sources":["./src/app/twoway/twoway.component.html","./src/app/twoway/twoway.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/cutompipe.ts","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/mypipe.pipe.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<html>\n\n<body>\n\n    <h1>{{hello|uppercase}}</h1>\n    <div>\n        <h1>EMP INFO USING TWO WAY DATA BINDING</h1>\n        <table border=\"2\">\n            <tr>\n                <td>First Name</td>\n                <td>\n                    <input type=\"text\" [(ngModel)]=\"employee.FirstName\" />\n                </td>\n            </tr>\n            <tr>\n                <td>Last Name</td>\n                <td>\n                    <input type=\"text\" [(ngModel)]=\"employee.LastName\" />\n                </td>\n            </tr>\n            <tr>\n                <td>Gender</td>\n                <td>\n                    <input type=\"text\" [(ngModel)]=\"employee.Gender\" />\n                </td>\n            </tr>\n        </table>\n        <br />\n        <table border=\"2\">\n            <tr>\n                <td>First Name</td>\n                <td>\n                    {{ employee.FirstName}}\n                </td>\n            </tr>\n            <tr>\n                <td>Last Name</td>\n                <td>\n                    {{ employee.LastName }}\n                </td>\n            </tr>\n            <tr>\n                <td>Gender</td>\n                <td>\n                    {{ employee.Gender }}\n                </td>\n            </tr>\n        </table>\n    </div>\n    <span *ngIf='!result'>welcome to anurag</span>\n\n</body>\n\n</html>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'twoway',\n  templateUrl: './twoway.component.html',\n  styleUrls: ['./twoway.component.css']\n})\nexport class TwowayComponent implements OnInit {\n  hello=\"DONT sleep\"\n  employee:any;\n  result:boolean=true;//input type  value={{employee.FirstName}}\n  constructor() {\n    this.employee = {\n      FirstName : \"Aman\",\n      LastName : \"Kumar\",\n      Gender : \"Male\"\n  };\n }\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n//data binding\n//{{}}-->binding expressions\nexport class AppComponent {\n  orgName = 'capgemini';\n  imagePath='assets/designOp.JPG'\n\n  status:string=\"\";\n\n\n  \n  onClick(parentData: string)\n  {\n    this.status=parentData;\n  }\n\n}\n//for ,..................   ngFor,ngIf,ngSwitch\n\n\n//ng g  c ","<h1>Parent Component  {{orgName|uppercase}}</h1>\r\n<h2>{{status}}</h2>\r\n\r\n<logout [orgnaization]=\"orgName\" (status)=onClick($event)></logout>\r\n\r\n\r\n\r\n\r\n<!-- <h2>my name is: {{name}} </h2>\r\n\r\n<img [src]=\"imagePath\" alt=\"image not found\"/>\r\n\r\n<login></login>\r\n                                                                                                                \r\n<twoway></twoway>\r\n\r\n\r\n\r\n<button type=\"button\" (click)=\"onClick()\" >Click Here</button> -->","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { custompipe } from './login/cutompipe';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TwowayComponent } from './twoway/twoway.component';\nimport { MypipePipe } from './mypipe.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LogoutComponent,\n    TwowayComponent,custompipe, MypipePipe\n  ],\n  imports: [\n    BrowserModule,FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Pipe, PipeTransform} from '@angular/core';\r\n@Pipe ({\r\n    name : 'empTitle'\r\n })\r\nexport class custompipe implements PipeTransform\r\n{\r\n    transform(name :string,gender:string) : string {\r\n        console.log(name);//name,male/female\r\n        if(gender.toLowerCase()=='male'){\r\n        return \"Mr.\"+name;\r\n    }\r\n        else{\r\n            return \"Miss.\"+name; \r\n        }\r\n     }\r\n}\r\n\r\n\r\n//ng g pipe custompipe","import { Component, Input, OnInit,EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n@Input()\norgnaization:string=\"\";\n@Output()\nstatus:EventEmitter<string>=new EventEmitter<string>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  logout=\"logged out succesfully\"\n\n  onClickSendDataToParent(){\n    this.status.emit(\"we are feeling hungry leave us\");\n  }\n}\n","<h1>Parent Data in child component  :  {{orgnaization}}</h1>\n<p>{{logout}}</p>\n\n<button type=\"button\" (click)=\"onClickSendDataToParent()\">ClickToSendData</button>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mypipe'\n})\nexport class MypipePipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","<html>\n<body>\n\n\n  <img src=\"\"/>\n\n\n  <h1>empInfo</h1>\n<table border=\"2\">\n  <tr>\n  <th>EmpID</th>\n  <th>Name</th>\n  <th>DOB</th>\n  <th>Gender</th>\n  <th>Salary</th>\n  </tr>\n  <tr *ngFor=\"let emp1 of emp\">\n  <td>{{emp1.empcode|uppercase}}</td><!-- pipes-->\n  <td>{{emp1.name|empTitle:emp1.gender}}</td><!--  ng  g p pname-->\n  <td>{{emp1.dateOfBirth|date}}</td>\n  <td>{{emp1.gender}}</td>\n  <td>{{emp1.sal|currency}}</td>\n  </tr>\n  <tr *ngIf=\"!emp||emp.length==0\">\n    <td colspan=\"5\">No employees to display  </td>\n  </tr>\n  </table>\n\n  </body>\n  \n  </html>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nemp:any[];\n  constructor() { \n      this.emp=[\n    {empcode:'emp101',name:\"akash\",dateOfBirth:'10/11/1993',gender:\"male\",sal:12000.123},\n   {empcode:'emp102',name:\"pranay\" ,dateOfBirth:'08/23/1990',gender:\"male\",sal:22000.123},\n  {empcode:'emp103',name:\"srikanth\", dateOfBirth:'06/11/1991',gender:\"male\", sal:32000.121},\n  {empcode:'emp104',name:\"deepa\" ,dateOfBirth:'07/15/1988',gender:\"female\",sal:42000.900},\n  {empcode:'emp105',name:\"ramya\" ,dateOfBirth:'06/19/1993',gender:\"female\",sal:200000.63125}\n    ];\n  }\n\n  ngOnInit(): void {\n    console.log(\"ng oninit\")\n  }\n  message=\"am from login component\";\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}